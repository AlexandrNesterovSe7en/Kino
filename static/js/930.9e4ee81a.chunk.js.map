{"version":3,"file":"static/js/930.9e4ee81a.chunk.js","mappings":"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","sources":["webpack://kinopoisk/./src/3COMPONENTS/Category/Category.module.css?e575","3COMPONENTS/Category/Category.jsx","webpack://kinopoisk/./src/2MODULES/RenderCategoriesCards/RenderCategoriesCards.module.css?3274","2MODULES/RenderCategoriesCards/RenderCategoriesCards.jsx","webpack://kinopoisk/./src/1PAGES/PrivatePages/Categories/CategoriesPage.module.css?0016","1PAGES/PrivatePages/Categories/CategoriesPage.jsx","webpack://kinopoisk/./src/3COMPONENTS/Card/Card.module.css?6e51","3COMPONENTS/Card/Card.jsx","webpack://kinopoisk/./src/4UI/Buttons/SeparateCategoryButton/SeparateCategoryButton.module.css?3e1a","4UI/Buttons/SeparateCategoryButton/SeparateCategoryButton.jsx","webpack://kinopoisk/./src/3COMPONENTS/StringMovies/StringMovies.module.css?989b","3COMPONENTS/StringMovies/StringMovies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"categoryLink\":\"Category_categoryLink__wz2tT\",\"titleWrapper\":\"Category_titleWrapper__UD9gF\",\"categoryAnim\":\"Category_categoryAnim__epWah\"};","\nimport { Link } from \"react-router-dom\";\nimport cl from \"./Category.module.css\";\nimport 'react-loading-skeleton/dist/skeleton.css'\n\n\nconst Category = ({ title, path }) => {\n\n    return (\n        <Link to={path} className={cl.categoryLink}>\n            <div className={cl.titleWrapper}>\n                <h2>{title}</h2>\n            </div>\n        </Link>\n    );\n};\n\nexport default Category;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RenderCategoriesCards_container__C9JJ9\",\"categoryString\":\"RenderCategoriesCards_categoryString__6p+Eb\",\"spinner\":\"RenderCategoriesCards_spinner__KTts7\",\"skeletonContainer\":\"RenderCategoriesCards_skeletonContainer__aMgAi\",\"swiperButtonNext\":\"RenderCategoriesCards_swiperButtonNext__Yyop+\",\"nextButton1\":\"RenderCategoriesCards_nextButton1__BNYb3\",\"buttonAnim\":\"RenderCategoriesCards_buttonAnim__E+SZC\",\"backButton\":\"RenderCategoriesCards_backButton__Q7fAU\",\"backButton1\":\"RenderCategoriesCards_backButton1__-UeS5\",\"nextButton\":\"RenderCategoriesCards_nextButton__16hdw\"};","import Category from \"../../3COMPONENTS/Category/Category\";\r\nimport { useEffect, useState } from \"react\";\r\nimport cl from './RenderCategoriesCards.module.css';\r\nimport { onValue, ref } from \"@firebase/database\";\r\nimport { database } from \"../../FireBase/FireBase\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\nimport StringMovies from \"../../3COMPONENTS/StringMovies/StringMovies\";\r\nimport { Swiper, SwiperSlide, useSwiper } from 'swiper/react';\r\nimport { Navigation, Pagination } from 'swiper/modules';\r\nimport \"./RenderCategoriesCards.css\";\r\n\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\n\r\nconst RenderCategoriesCards = () => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [fetching, setFetching] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const refCategories = ref(database, 'MovieCategory');\r\n\r\n        onValue(refCategories, (snapshot) => {\r\n            if (snapshot.exists()) {\r\n                setCategories(Object.values(snapshot.val()));\r\n                setFetching(false);\r\n            }\r\n        }, { onlyOnce: true });\r\n    }, [])\r\n\r\n    function renderSkeleton() {\r\n        const skeletonLoaders = []\r\n\r\n        for (let i = 0; i < 15; i++) {\r\n            skeletonLoaders.push(\r\n                <div key={i} className={cl.skeletonConatiner}>\r\n                    <SkeletonTheme baseColor=\"#202020\" highlightColor=\"#444\" display=\"flex\">\r\n                        <Skeleton count={1} width={\"195px\"} height={\"195px\"} borderRadius={\"30px\"} />\r\n                    </SkeletonTheme>\r\n                </div>)\r\n        }\r\n\r\n        return skeletonLoaders\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <div className={cl.container} >\r\n                    <div className={cl.categoryString} style={{display: fetching ? \"flex\" : null}}>\r\n                        {\r\n                            fetching ?\r\n                                renderSkeleton()\r\n                                :\r\n                                <Swiper \r\n                                    speed={1300}\r\n                                    spaceBetween={\"30px\"}\r\n                                    rewind={true}\r\n                                    navigation={{\r\n                                        prevEl: \".swiper-button-prev\",\r\n                                        nextEl: \".swiper-button-next\"\r\n                                    }}\r\n                                    modules={[Navigation]}\r\n                                    breakpoints={{\r\n                                        320: {\r\n                                            slidesPerView: 1,\r\n                                            slidesPerGroup: 1,\r\n                                            spaceBetween: 10\r\n                                        },\r\n                                        480: {\r\n                                            slidesPerView: 2,\r\n                                            slidesPerGroup: 2,\r\n                                            spaceBetween: 20\r\n                                        },\r\n                                        768: {\r\n                                            slidesPerView: 3,\r\n                                            slidesPerGroup: 3,\r\n                                            spaceBetween: 20\r\n                                        },\r\n                                        1024: {\r\n                                            slidesPerView: 4,\r\n                                            slidesPerGroup: 4,\r\n                                            spaceBetween: 20\r\n                                        },\r\n                                        1440: {\r\n                                            slidesPerView: 6,\r\n                                            slidesPerGroup: 6,\r\n                                            spaceBetween: 20\r\n                                        },\r\n                                        1920: {\r\n                                            slidesPerView: 8,\r\n                                            slidesPerGroup: 8,\r\n                                            spaceBetween: 20\r\n                                        }\r\n                                    }}\r\n                                    className=\"mySwiper1\">\r\n                                        <button className=\"swiper-button-prev\"></button>\r\n                                    {\r\n                                        categories.map(title => {\r\n                                            return (\r\n                                                <SwiperSlide className={cl.swiperSlide} key={title}><Category title={title} path={title} /></SwiperSlide>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                        <button className=\"swiper-button-next\"></button>\r\n                                </Swiper>\r\n                        }\r\n                    </div>\r\n                    <div className={cl.recommendation}>\r\n                        <StringMovies category=\"Рекомендуем\" limit={14} />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RenderCategoriesCards;","// extracted by mini-css-extract-plugin\nexport default {\"categoriesPageWrapper\":\"CategoriesPage_categoriesPageWrapper__IyJ6l\",\"categoriesPageWrapperInset\":\"CategoriesPage_categoriesPageWrapperInset__KjW2k\",\"categoryTitle\":\"CategoriesPage_categoryTitle__EcvVv\",\"wrapper\":\"CategoriesPage_wrapper__4kip+\"};","import { Outlet, useParams } from \"react-router-dom\";\r\nimport RenderCategoriesCards from \"../../../2MODULES/RenderCategoriesCards/RenderCategoriesCards\";\r\nimport cl from \"./CategoriesPage.module.css\";\r\n\r\n\r\nconst CategoriesPage = () => {\r\n    const param = useParams();\r\n\r\n    return (\r\n        <div className={cl.wrapper}>\r\n            {\r\n                param.category ?\r\n                    <Outlet />\r\n                    :\r\n                    <RenderCategoriesCards />\r\n            }\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default CategoriesPage;","// extracted by mini-css-extract-plugin\nexport default {\"cardWrapper\":\"Card_cardWrapper__RrRk2\",\"cardAnim\":\"Card_cardAnim__M+5lz\",\"cardDescWrapper\":\"Card_cardDescWrapper__Nm3Gv\",\"img\":\"Card_img__uYqII\",\"imgWrapper\":\"Card_imgWrapper__IUoum\",\"inSubscribe\":\"Card_inSubscribe__LEttH\"};","import { Link } from \"react-router-dom\";\nimport cl from \"./Card.module.css\"\n\n\n\nconst Card = ({ img, title, inSub, rating, uid }) => {\n\n    return (\n        <div className={cl.cardWrapper}>\n            {/* Отображение рейтинга и картинки */}\n            <div className={cl.imgWrapper}>\n                {\n                    rating ?\n                        <>\n                            <span>★ {rating.toString().length === 1 ? rating + \".0\" : rating}</span>\n                        </>\n                        :\n                        <></>\n                }\n                <Link to={`/FilmPage/${uid}`}>\n                    <img src={img} alt=\"card-img\" className={cl.img} />\n                </Link>\n            </div>\n\n            {/* Отображение названия фильма и его состояние */}\n            <div className={cl.cardDescWrapper}>\n                <div className={cl.titleWrapper}>\n                    <div className={cl.titleShadow}></div>\n                    <h4>{title}</h4>\n                </div>\n                <p className={cl.inSubscribe}>{inSub ? \"В подписке\" : \"Бесплатно\"}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","// extracted by mini-css-extract-plugin\nexport default {\"categoryLink\":\"SeparateCategoryButton_categoryLink__Ktrqv\"};","import { Link } from \"react-router-dom\";\nimport cl from \"./SeparateCategoryButton.module.css\";\n\n\n// Ссылка на категорию находящаяся на главной странице\nconst SeparateCategoryButton = ({ category, className, movieMargin }) => {\n    return ( \n        <Link to={category === \"Рекомендуем\" ? `${category}` : `Categories/${category}`} className={cl.categoryLink + \" \" + className} style={{marginLeft: movieMargin || movieMargin < 0 ? `${movieMargin + 1640}px` : \"0\"}}>\n            <h2>{category}</h2>\n            <svg fill=\"white\" width=\"18px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.536 21.886a1.004 1.004 0 0 0 1.033-.064l13-9a1 1 0 0 0 0-1.644l-13-9A1 1 0 0 0 5 3v18a1 1 0 0 0 .536.886z\"/></svg>\n        </Link>\n     );\n}\n \nexport default SeparateCategoryButton;","// extracted by mini-css-extract-plugin\nexport default {\"stringMoviesWrapper\":\"StringMovies_stringMoviesWrapper__2wqfC\",\"listMovies\":\"StringMovies_listMovies__kuHiy\"};","import { useEffect, useState } from \"react\";\nimport SeparateCategoryButton from \"../../4UI/Buttons/SeparateCategoryButton/SeparateCategoryButton\"\nimport cl from \"./StringMovies.module.css\";\nimport { endAt, equalTo, get, limitToFirst, limitToLast, orderByChild, query, ref, startAt } from \"firebase/database\";\nimport { database } from \"../../FireBase/FireBase\";\nimport Card from \"../Card/Card\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport { SwiperSlide, Swiper } from \"swiper/react\";\nimport { Navigation } from \"swiper/modules\";\nimport \"./StringMovies.css\";\n\nimport 'swiper/css';\nimport 'swiper/css/navigation';\n\n\nconst StringMovies = ({ category, limit }) => {\n\n    const [data, setData] = useState([]);\n    const [fetching, setFetching] = useState(true);\n\n    useEffect(() => {\n        const cat = ref(database, 'Movies');\n        const queryCat = query(cat, orderByChild(`categories/${category}`), equalTo(true), limitToFirst(limit));\n        const recCat = query(cat, orderByChild(\"rating\"), endAt('9.2'), limitToLast(limit))\n\n        get(category === \"Рекомендуем\" ? recCat : queryCat).then(snap => {\n            if (snap.exists) {\n                setData(Object.entries(snap.val()));\n                setFetching(false);\n            }\n        }, { onclyOnce: true }\n        )\n        // eslint-disable-next-line\n    }, [])\n\n    function renderSkeleton() {\n        const skeletonLoaders = []\n\n        for (let i = 0; i < limit; i++) {\n            skeletonLoaders.push(\n                <SkeletonTheme key={i} baseColor=\"#202020\" highlightColor=\"#444\">\n                    <div>\n                        <Skeleton count={1} width={\"158px\"} height={\"228px\"} borderRadius={\"10px\"} />\n                        <div style={{ marginTop: \"10px\" }}>\n                            <Skeleton count={1} width={\"158px\"} height={\"20px\"} borderRadius={\"10px\"} />\n                            <div style={{ marginTop: \"3px\" }}>\n                                <Skeleton count={1} width={\"108px\"} height={\"17px\"} borderRadius={\"10px\"} />\n                            </div>\n                        </div>\n                    </div>\n                </SkeletonTheme>)\n        }\n\n        return skeletonLoaders\n    }\n\n    return (\n        <div className={cl.stringMoviesWrapper}>\n            <SeparateCategoryButton category={category} className={category === \"Рекомендуем\" ? cl.rec : null} />\n            <div className={cl.listMovies} style={{display: fetching ? \"flex\" : category === \"Рекомендуем\" ? null : \"flex\", flexWrap: category === \"Рекомендуем\" ? \"nowrap\" : \"wrap\"}}>\n                {\n                    fetching\n                        ?\n                        renderSkeleton()\n                        :\n                        category === \"Рекомендуем\" ?\n                        <Swiper \n                                spaceBetween={\"30px\"}\n                                speed={1300}\n                                rewind={true}\n                                navigation={{\n                                    prevEl: \".swiper-button-prev\",\n                                    nextEl: \".swiper-button-next\"\n                                }}\n                                modules={[Navigation]}\n                                breakpoints={{\n                                    320: {\n                                        slidesPerView: 1,\n                                        slidesPerGroup: 1,\n                                        spaceBetween: 10\n                                    },\n                                    480: {\n                                        slidesPerView: 2,\n                                        slidesPerGroup: 2,\n                                        spaceBetween: 20\n                                    },\n                                    768: {\n                                        slidesPerView: 3,\n                                        slidesPerGroup: 3,\n                                        spaceBetween: 20\n                                    },\n                                    1024: {\n                                        slidesPerView: 5,\n                                        slidesPerGroup: 5,\n                                        spaceBetween: 20\n                                    },\n                                    1440: {\n                                        slidesPerView: 7,\n                                        slidesPerGroup: 7,\n                                        spaceBetween: 20\n                                    },\n                                    1920: {\n                                        slidesPerView: 10,\n                                        slidesPerGroup: 10,\n                                        spaceBetween: 20\n                                    }\n                                }}\n                                className=\"mySwiper2\">\n                                    <button className=\"swiper-button-prev\"></button>\n                                        {\n                                            data.map(([uid, movie]) => {\n                                                return <SwiperSlide key={uid}><Card uid={uid} img={movie?.img} title={movie?.title} inSub={movie?.inSub} key={uid} rating={movie?.rating} /></SwiperSlide>;\n                                            })\n                                        } \n                                    <button className=\"swiper-button-next\"></button>\n                        </Swiper>\n                        :\n                        <>\n                            {\n                                data.map(([uid, movie]) => {\n                                    return <Card uid={uid} img={movie?.img} title={movie?.title} inSub={movie?.inSub} key={uid} rating={movie?.rating} />;\n                                })\n                            }\n                        </>\n                }\n            </div>\n        </div>\n\n    )\n}\n\nexport default StringMovies;"],"names":["_ref","title","path","_jsx","Link","to","className","cl","children","RenderCategoriesCards","categories","setCategories","useState","fetching","setFetching","useEffect","refCategories","ref","database","onValue","snapshot","exists","Object","values","val","onlyOnce","_Fragment","_jsxs","container","categoryString","style","display","skeletonLoaders","i","push","skeletonConatiner","SkeletonTheme","baseColor","highlightColor","Skeleton","count","width","height","borderRadius","renderSkeleton","Swiper","speed","spaceBetween","rewind","navigation","prevEl","nextEl","modules","Navigation","breakpoints","slidesPerView","slidesPerGroup","map","SwiperSlide","swiperSlide","Category","recommendation","StringMovies","category","limit","CategoriesPage","param","useParams","Outlet","img","inSub","rating","uid","cardWrapper","imgWrapper","toString","length","concat","src","alt","cardDescWrapper","titleWrapper","titleShadow","inSubscribe","movieMargin","marginLeft","fill","viewBox","xmlns","d","data","setData","cat","queryCat","query","orderByChild","equalTo","limitToFirst","recCat","endAt","limitToLast","get","then","snap","entries","onclyOnce","stringMoviesWrapper","SeparateCategoryButton","rec","listMovies","flexWrap","marginTop","_ref2","movie","Card","_ref3"],"sourceRoot":""}