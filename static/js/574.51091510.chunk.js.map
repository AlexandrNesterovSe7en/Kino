{"version":3,"file":"static/js/574.51091510.chunk.js","mappings":"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","sources":["webpack://kinopoisk/./src/1PAGES/PrivatePages/Profile/ProfilePage.module.css?9fbc","1PAGES/PrivatePages/Profile/ProfilePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ProfilePage_wrapper__iGolL\",\"wrapperAnim\":\"ProfilePage_wrapperAnim__imrbu\",\"container\":\"ProfilePage_container__UreEm\",\"userInfo\":\"ProfilePage_userInfo__3qG8P\",\"imgBorder\":\"ProfilePage_imgBorder__xZ9Gv\",\"profileImg\":\"ProfilePage_profileImg__YZzHU\",\"infoWrapper\":\"ProfilePage_infoWrapper__nLIPK\",\"infoString\":\"ProfilePage_infoString__3p4Ov\",\"inputWrapper\":\"ProfilePage_inputWrapper__T1I55\",\"info\":\"ProfilePage_info__f66QO\",\"logOut\":\"ProfilePage_logOut__K2tMi\",\"logOutButton\":\"ProfilePage_logOutButton__fhyP2\",\"deleteButton\":\"ProfilePage_deleteButton__+0eXS\",\"done\":\"ProfilePage_done__pjH9U\"};","import { useEffect, useState } from \"react\";\nimport { auth, database } from \"../../../FireBase/FireBase\";\nimport cl from \"./ProfilePage.module.css\";\nimport { get, ref, update } from \"firebase/database\";\nimport { GoogleAuthProvider, deleteUser, reauthenticateWithRedirect, signOut } from \"firebase/auth\";\nimport done from \"../../../4UI/Img/done.png\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSubscribe } from \"../../../features/currentUserSlice/currentUserSlice\";\n\n\n\nconst ProfilePage = () => {\n\n    const [isSubscribe, setIsSubscribe] = useState(false)\n    const [inputName, setInputName] = useState(\"\");\n    const [inputSurname, setInputSurname] = useState(\"\");\n    const [name, setName] = useState(\"\")\n    const [surname, setSurname] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const dispatch = useDispatch();\n    const isSub = useSelector(state => state.currentUser.isSubscribe)\n\n\n    useEffect(() => {\n        get(ref(database, `Users/${auth.currentUser.uid}/isSubscribe`))\n            .then(snap => {\n                setIsSubscribe(snap.val())\n        })\n        get(ref(database, `Users/${auth.currentUser.uid}/Name`))\n            .then(snap => {\n                setName(snap.val())\n            })\n        get(ref(database, `Users/${auth.currentUser.uid}/Surname`))\n            .then(snap => {\n                setSurname(snap.val())\n            })\n        get(ref(database, `Users/${auth.currentUser.uid}/Email`))\n            .then(snap => {\n                setEmail(snap.val())\n            })\n        \n    })\n\n    function logOut() {\n        // Отвечает за выход из аккаунта\n        signOut(auth).then(() => {\n\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    async function deleteAccount() {\n\n        const provider = new GoogleAuthProvider();\n\n        await reauthenticateWithRedirect(auth.currentUser, provider);\n        deleteUser(auth.currentUser);\n\n        update(ref(database, `Users`), {\n            [auth.currentUser.uid]: null\n        }).then(() => {\n            console.log(\"Аккаунт удален успешно\");\n        })\n    }\n\n    function setNameInDB() {\n        if(inputName) {\n            setName(inputName)\n            update(ref(database, `Users/${auth.currentUser.uid}`), {\n                Name: inputName\n            }).then(() => {\n                console.log(\"Имя успешно обновлено\");\n            })\n        }\n    }\n\n    function setSurnameInDB() {\n        if(inputSurname) {\n            setSurname(inputSurname)\n            update(ref(database, `Users/${auth.currentUser.uid}`), {\n                Surname: inputSurname\n            }).then(() => {\n                console.log(\"Фамилия успешно обновлена\");\n            })\n        }\n    }\n\n    function cancelSub() {\n        dispatch(setSubscribe(false))\n        update(ref(database, `Users/${auth.currentUser.uid}`), {\n            isSubscribe: false\n        }).then(() => {\n            console.log(\"Подписка успешно отменена\", isSub);\n        })\n    }\n    \n    return (\n        <div className={cl.wrapper}>\n            <div className={cl.container} style={{borderColor: isSubscribe || isSub ? \"#1D79D2\" : \"grey\", boxShadow: isSubscribe || isSub ? \"0 0 7px #1D79D2\" : \"0 0 0\"}}>\n                <div className={cl.userInfo}>\n                    <div className={cl.profileImgWrapper}>\n                        <div className={cl.imgBorder} \n                                style={{borderColor: isSubscribe || isSub? \"#1D79D2\" : \"grey\", boxShadow: isSubscribe || isSub ? \"0 0 7px #1D79D2\" : \"0 0 0\"}}>\n                            <div className={cl.profileImg}>{\n                                !name && !surname && email ? email[0].toUpperCase() :\n                                name && !surname ? name[0].toUpperCase() :\n                                !name && surname ? surname[0].toUpperCase() :\n                                name && surname ? name[0].toUpperCase() + surname[0].toUpperCase() :\n                                email && email[0].toUpperCase()\n                            }</div>\n                        </div>\n                    </div>\n                    <div className={cl.infoWrapper}>\n                        <h2>Информация об аккаунте</h2>\n                        <div className={cl.info}>\n                            <div className={cl.infoString}>\n                                <label>Имя: </label>\n                                <div className={cl.inputWrapper}>\n                                    {\n                                        name ? <p>{name}</p> : \n                                        <>\n                                            <input type=\"text\" placeholder=\"Введите ваше имя\" onChange={(e) => setInputName(e.target.value)}/>\n                                            <button onClick={setNameInDB}>\n                                                <img className={cl.done} src={done} alt=\"done\" />\n                                            </button>\n                                        </>\n                                    }\n                                </div>\n                            </div>\n                            <div className={cl.infoString}>\n                                <label>Фамилия: </label>\n                                <div className={cl.inputWrapper}>\n                                    {\n                                        surname ? <p>{surname}</p> :\n                                        <>\n                                            <input type=\"text\" placeholder=\"Введите вашу фамилию\" onChange={(e) => setInputSurname(e.target.value)}/>\n                                            <button onClick={setSurnameInDB}>\n                                                <img className={cl.done} src={done} alt=\"done\" />\n                                            </button>\n                                        </> \n                                    }\n                                </div>\n                            </div>\n                            <div>\n                                <label>Email: <span>{email ? email : null}</span></label>\n                            </div>\n                            <div>\n                                <label>Подписка: <span style={{color: isSubscribe || isSub ? \"#1D79D2\" : \"white\"}}>{isSubscribe || isSub ? \"Активна\" : \"Не активна\"}</span></label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={cl.logOut}>\n                    <button className={cl.logOutButton} onClick={cancelSub}>Отменить подписку</button>\n                    <button className={cl.logOutButton} onClick={logOut}>Выйти из аккаунта</button>\n                    <button className={cl.deleteButton} onClick={deleteAccount}>Удалить аккаунт</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProfilePage;"],"names":["ProfilePage","isSubscribe","setIsSubscribe","useState","inputName","setInputName","inputSurname","setInputSurname","name","setName","surname","setSurname","email","setEmail","dispatch","useDispatch","isSub","useSelector","state","currentUser","useEffect","get","ref","database","concat","auth","uid","then","snap","val","_jsx","className","cl","wrapper","children","_jsxs","container","style","borderColor","boxShadow","userInfo","profileImgWrapper","imgBorder","profileImg","toUpperCase","infoWrapper","info","infoString","inputWrapper","_Fragment","type","placeholder","onChange","e","target","value","onClick","update","Name","console","log","done","src","alt","Surname","color","logOut","logOutButton","setSubscribe","signOut","catch","err","deleteButton","async","provider","GoogleAuthProvider","reauthenticateWithRedirect","deleteUser"],"sourceRoot":""}