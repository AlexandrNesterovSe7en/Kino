{"version":3,"file":"static/js/45.7c32f834.chunk.js","mappings":"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","sources":["webpack://kinopoisk/./src/1PAGES/PrivatePages/Profile/ProfilePage.module.css?9fbc","1PAGES/PrivatePages/Profile/ProfilePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ProfilePage_wrapper__iGolL\",\"wrapperAnim\":\"ProfilePage_wrapperAnim__imrbu\",\"container\":\"ProfilePage_container__UreEm\",\"userInfo\":\"ProfilePage_userInfo__3qG8P\",\"imgBorder\":\"ProfilePage_imgBorder__xZ9Gv\",\"profileImg\":\"ProfilePage_profileImg__YZzHU\",\"infoWrapper\":\"ProfilePage_infoWrapper__nLIPK\",\"infoString\":\"ProfilePage_infoString__3p4Ov\",\"done\":\"ProfilePage_done__pjH9U\",\"inputWrapper\":\"ProfilePage_inputWrapper__T1I55\",\"info\":\"ProfilePage_info__f66QO\",\"logOut\":\"ProfilePage_logOut__K2tMi\",\"cancelSubButton\":\"ProfilePage_cancelSubButton__BRTZH\",\"logOutButton\":\"ProfilePage_logOutButton__fhyP2\",\"doneButton\":\"ProfilePage_doneButton__Cj7ud\",\"change\":\"ProfilePage_change__mpiBh\",\"surname\":\"ProfilePage_surname__EoOSy\",\"name\":\"ProfilePage_name__69kel\"};","import { useEffect, useState } from \"react\";\nimport { auth, database } from \"../../../FireBase/FireBase\";\nimport cl from \"./ProfilePage.module.css\";\nimport { get, ref, update } from \"firebase/database\";\nimport { signOut } from \"firebase/auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSubscribe } from \"../../../features/currentUserSlice/currentUserSlice\";\n\n\n\nconst ProfilePage = () => {\n\n    const [isSubscribe, setIsSubscribe] = useState(false)\n    const [inputName, setInputName] = useState(\"\");\n    const [inputSurname, setInputSurname] = useState(\"\");\n    const [name, setName] = useState(\"\")\n    const [surname, setSurname] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const dispatch = useDispatch();\n    const isSub = useSelector(state => state.currentUser.isSubscribe)\n\n\n    useEffect(() => {\n        get(ref(database, `Users/${auth.currentUser.uid}/isSubscribe`))\n            .then(snap => {\n                setIsSubscribe(snap.val())\n            })\n        get(ref(database, `Users/${auth.currentUser.uid}/Name`))\n            .then(snap => {\n                setName(snap.val())\n            })\n        get(ref(database, `Users/${auth.currentUser.uid}/Surname`))\n            .then(snap => {\n                setSurname(snap.val())\n            })\n        get(ref(database, `Users/${auth.currentUser.uid}/Email`))\n            .then(snap => {\n                setEmail(snap.val())\n            })\n\n    }, [])\n\n    useEffect(() => {\n    }, [isSubscribe])\n\n    \n\n\n    function logOut() {\n        // Отвечает за выход из аккаунта\n        signOut(auth).then(() => {\n\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    async function deleteAccount() {\n\n        // const credential = EmailAuthProvider.credentialWithLink(email, );\n\n        // reauthenticateWithCredential(auth.currentUser, credential)\n        \n\n        auth.currentUser.delete()\n        \n        update(ref(database, `Users`), {\n            [auth.currentUser.uid]: null\n        }).then(() => {\n            console.log(\"Аккаунт удален успешно\");\n        })\n    }\n\n    function setNameInDB() {\n        if (inputName) {\n            setName(inputName)\n            update(ref(database, `Users/${auth.currentUser.uid}`), {\n                Name: inputName\n            }).then(() => {\n                console.log(\"Имя успешно обновлено\");\n            })\n        }\n    }\n\n    function setSurnameInDB() {\n        if (inputSurname) {\n            setSurname(inputSurname)\n            update(ref(database, `Users/${auth.currentUser.uid}`), {\n                Surname: inputSurname\n            }).then(() => {\n                console.log(\"Фамилия успешно обновлена\");\n            })\n        }\n    }\n\n    async function cancelSub() {\n        setIsSubscribe(false);\n        dispatch(setSubscribe(false))\n        await update(ref(database, `Users/${auth.currentUser.uid}`), {\n            isSubscribe: false\n        }).then(() => {\n            console.log(\"Подписка успешно отменена\", isSub);\n        })\n    }\n\n    function editName() {\n        setName(\"\");\n        setInputName(\"\");\n        update(ref(database, `Users/${auth.currentUser.uid}`), {\n            Name: \"\"\n        })\n    }\n\n    function editSurname() {\n        setSurname(\"\")\n        setInputSurname(\"\")\n        update(ref(database, `Users/${auth.currentUser.uid}`), {\n            Surname: \"\"\n        })\n    }\n\n    return (\n        <div className={cl.wrapper}>\n            <div className={cl.container} style={{ borderColor: isSubscribe || isSub ? \"#1D79D2\" : \"grey\", boxShadow: isSubscribe || isSub ? \"0 0 7px #1D79D2\" : \"0 0 0\" }}>\n                <div className={cl.userInfo}>\n                    <div className={cl.profileImgWrapper}>\n                        <div className={cl.imgBorder}\n                            style={{ borderColor: isSubscribe || isSub ? \"#1D79D2\" : \"grey\", boxShadow: isSubscribe || isSub ? \"0 0 7px #1D79D2\" : \"0 0 0\" }}>\n                            <div className={cl.profileImg}>{\n                                !name && !surname && email ? email[0].toUpperCase() :\n                                    name && !surname ? name[0].toUpperCase() :\n                                        !name && surname ? surname[0].toUpperCase() :\n                                            name && surname ? name[0].toUpperCase() + surname[0].toUpperCase() :\n                                                email && email[0].toUpperCase()\n                            }</div>\n                        </div>\n                    </div>\n                    <div className={cl.infoWrapper}>\n                        <h2>Информация об аккаунте</h2>\n                        <div className={cl.info}>\n                            <div className={cl.infoString}>\n                                <label>Имя: </label>\n                                <div className={cl.inputWrapper}>\n                                    {\n                                        name ? <p className={cl.name}>{name} <svg xmlns=\"http://www.w3.org/2000/svg\" onClick={editName} fill=\"grey\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h357l-80 80H200v560h560v-278l80-80v358q0 33-23.5 56.5T760-120H200Zm280-360ZM360-360v-170l367-367q12-12 27-18t30-6q16 0 30.5 6t26.5 18l56 57q11 12 17 26.5t6 29.5q0 15-5.5 29.5T897-728L530-360H360Zm481-424-56-56 56 56ZM440-440h56l232-232-28-28-29-28-231 231v57Zm260-260-29-28 29 28 28 28-28-28Z\" /></svg></p> :\n                                            <>\n                                                <input type=\"text\" placeholder=\"Введите ваше имя\" onChange={(e) => setInputName(e.target.value)} />\n                                                <button onClick={setNameInDB} className={cl.doneButton}>\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z\" /></svg>\n                                                </button>\n                                            </>\n                                    }\n                                </div>\n                            </div>\n                            <div className={cl.infoString}>\n                                <label>Фамилия: </label>\n                                <div className={cl.inputWrapper}>\n                                    {\n                                        surname ? <p className={cl.surname}>{surname} <svg xmlns=\"http://www.w3.org/2000/svg\" onClick={editSurname} fill=\"grey\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h357l-80 80H200v560h560v-278l80-80v358q0 33-23.5 56.5T760-120H200Zm280-360ZM360-360v-170l367-367q12-12 27-18t30-6q16 0 30.5 6t26.5 18l56 57q11 12 17 26.5t6 29.5q0 15-5.5 29.5T897-728L530-360H360Zm481-424-56-56 56 56ZM440-440h56l232-232-28-28-29-28-231 231v57Zm260-260-29-28 29 28 28 28-28-28Z\" /></svg></p> :\n                                            <>\n                                                <input type=\"text\" placeholder=\"Введите вашу фамилию\" onChange={(e) => setInputSurname(e.target.value)} />\n                                                <button onClick={setSurnameInDB} className={cl.doneButton}>\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className={cl.done} height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z\" /></svg>\n                                                </button>\n                                            </>\n                                    }\n                                </div>\n                            </div>\n                            <div>\n                                <label>Email: <span>{email ? email : null}</span></label>\n                            </div>\n                            <div>\n                                <label>Подписка: <span style={{ color: isSubscribe || isSub ? \"#1D79D2\" : \"white\" }}>{isSubscribe || isSub ? \"Активна\" : \"Не активна\"}</span></label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={cl.logOut}>\n                    <button className={cl.cancelSubButton} onClick={cancelSub}>Отменить подписку</button>\n                    <button className={cl.logOutButton} onClick={logOut}>Выйти из аккаунта</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProfilePage;"],"names":["ProfilePage","isSubscribe","setIsSubscribe","useState","inputName","setInputName","inputSurname","setInputSurname","name","setName","surname","setSurname","email","setEmail","dispatch","useDispatch","isSub","useSelector","state","currentUser","useEffect","get","ref","database","concat","auth","uid","then","snap","val","_jsx","className","cl","wrapper","children","_jsxs","container","style","borderColor","boxShadow","userInfo","profileImgWrapper","imgBorder","profileImg","toUpperCase","infoWrapper","info","infoString","inputWrapper","xmlns","onClick","update","Name","fill","height","viewBox","width","d","_Fragment","type","placeholder","onChange","e","target","value","console","log","doneButton","Surname","done","color","logOut","cancelSubButton","async","setSubscribe","logOutButton","signOut","catch","err"],"sourceRoot":""}