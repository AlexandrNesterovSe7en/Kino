{"version":3,"file":"static/js/369.084dc2f2.chunk.js","mappings":"gJACA,SAAgB,kBAAoB,sCAAsC,kBAAoB,sCAAsC,cAAgB,kCAAkC,yBAA2B,6CAA6C,mBAAqB,wC,iCCMnR,MAsFA,EAtFmBA,KAEf,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IA0D/C,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAGC,kBAAkBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yEACJJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAGI,kBAAkBF,SAAA,EACjCJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAGK,cAAcH,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+EACJJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAGM,mBAAmBJ,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SAAOI,KAAK,OAAOC,YAAY,iDAAcC,SAAWC,GAAMd,EAAec,EAAEC,OAAOC,UACtFT,EAAAA,EAAAA,KAAA,UAAQJ,UAAWC,EAAGa,aAAcC,QA/DxD,YACIC,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIC,EAAAA,EAAS,WAADC,OAAavB,KAC3BwB,MAAK,KACFC,QAAQC,IAAI,iHAAuB,IAEtCC,OAAMC,IACHH,QAAQC,IAAI,sKAAoC,GAE5D,EAuD6EnB,SAAC,sDAGlEC,EAAAA,EAAAA,KAAA,UACAL,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAGwB,yBAAyBtB,SAAA,EACxCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oKACJC,EAAAA,EAAAA,KAAA,UAAQW,QA3DxB,WAEI,MAAMW,EAAe,CAAC,EAChBC,EAAe,CAAC,EAChBC,GAAYX,EAAAA,EAAAA,IAAIC,EAAAA,EAAU,WAEhCW,EAAAA,EAAAA,IAAQD,GAAWE,IACfA,EAAKC,SAAQC,IACT,MAAMC,EAAQD,EAAUE,MAClBC,EAAWH,EAAUI,IAErBC,EAAiBX,EAAaY,eAAeH,GAC7CI,EAAcC,OAAOC,OAAOf,GAAcgB,MAAKC,GAAKA,EAAEC,QAAUX,EAAMW,QAEzEP,GAAkBE,EACjBZ,EAAaQ,GAAYF,EAEzBP,EAAaS,GAAYF,CAC7B,GACF,IAGNO,OAAOK,KAAKlB,GAAcI,SAAQI,IAC9BW,YAAW,MACP9B,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIC,EAAAA,EAAS,WAADC,OAAagB,KAC3Bf,MAAK,KACFC,QAAQC,IAAI,uHAAwB,IAEvCC,OAAMC,IACHH,QAAQC,IAAIE,EAAI,GAClB,GACP,IAAK,GAEhB,EA0BmDrB,SAAC,8FAExCC,EAAAA,EAAAA,KAAA,UACAL,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sJACJC,EAAAA,EAAAA,KAAA,UAAQW,QA7BxB,WACI,MAAMa,GAAYmB,EAAAA,EAAAA,KAAM9B,EAAAA,EAAAA,IAAIC,EAAAA,EAAU,WAAW8B,EAAAA,EAAAA,IAAY,OAE7DnB,EAAAA,EAAAA,IAAQD,GAAWE,IACfU,OAAOK,KAAKf,EAAKI,OAAOe,KAAIjB,KACxBhB,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIC,EAAAA,EAAS,UAADC,OAAYa,IAAa,GAC9C,GAEV,EAqBiD7B,SAAC,4FAGxC,C","sources":["webpack://kinopoisk/./src/1PAGES/Admin/AdminPanel/AdminPanel.module.css?0873","1PAGES/Admin/AdminPanel/AdminPanel.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"adminPanelWrapper\":\"AdminPanel_adminPanelWrapper__RIxZl\",\"functionalWrapper\":\"AdminPanel_functionalWrapper__7EXTM\",\"deleteWrapper\":\"AdminPanel_deleteWrapper__yPvcO\",\"deleteRepetitionsWrapper\":\"AdminPanel_deleteRepetitionsWrapper__gGClq\",\"deleteInputWrapper\":\"AdminPanel_deleteInputWrapper__Th7V6\"};","\nimport { useState } from \"react\";\nimport cl from \"./AdminPanel.module.css\";\nimport { database } from \"../../../FireBase/FireBase\";\nimport { limitToLast, onValue, query, ref, remove } from \"firebase/database\";\n\n\nconst AdminPanel = () => {\n\n    const [deleteInput, setDeleteInput] = useState(\"\");\n\n\n    function deleteMovie() {\n        remove(ref(database, `/Movies/${deleteInput}`))\n            .then(() => {\n                console.log(\"Фильм успешно удален\");\n            })\n            .catch(err => {\n                console.log(\"Вероятно такого UID не существует\");\n            })\n    }\n    \n    function deleteRepetitions() {\n\n        const uniqueMovies = {}\n        const deleteMovies = {}\n        const moviesRef = ref(database, \"Movies\")\n\n        onValue(moviesRef, snap => {\n            snap.forEach(childSnap => {\n                const movie = childSnap.val();\n                const movieKey = childSnap.key;\n\n                const movieKeyExists = uniqueMovies.hasOwnProperty(movieKey)\n                const movieExists = Object.values(uniqueMovies).some(m => m.title === movie.title)\n\n                if(movieKeyExists || movieExists) {\n                    deleteMovies[movieKey] = movie\n                }else{\n                    uniqueMovies[movieKey] = movie\n                }\n            })\n\n        })\n        Object.keys(deleteMovies).forEach(movieKey => {\n            setTimeout(() => {\n                remove(ref(database, `/Movies/${movieKey}`))\n                    .then(() => {\n                        console.log(\"Повтор успешно удален\");\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n            }, 1000)\n        })\n    }\n\n    function delete500Movies() {\n        const moviesRef = query(ref(database, \"Movies\"), limitToLast(500))\n\n        onValue(moviesRef, snap => {\n            Object.keys(snap.val()).map(childSnap => {\n                remove(ref(database, `Movies/${childSnap}`))\n            });\n        })\n    }\n    \n    return (\n        <div className={cl.adminPanelWrapper}>\n            <h1>Админ панель</h1>\n            <div className={cl.functionalWrapper}>\n                <div className={cl.deleteWrapper}>\n                    <h2>Удалить фильм</h2>\n                    <div className={cl.deleteInputWrapper}>\n                        <input type=\"text\" placeholder=\"Введите UID\" onChange={(e) => setDeleteInput(e.target.value)}/>\n                        <button className={cl.deleteButton} onClick={deleteMovie}>Удалить</button>\n                    </div>\n                </div>\n                <hr />\n                <div className={cl.deleteRepetitionsWrapper}>\n                    <h2>Удалить повторяющиеся фильмы</h2>\n                    <button onClick={deleteRepetitions}>Удалить повторы</button>\n                </div>\n                <hr />\n                <div>\n                    <h2>Удалить 500 последних записей</h2>\n                    <button onClick={delete500Movies}>Удалить записи</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AdminPanel;"],"names":["AdminPanel","deleteInput","setDeleteInput","useState","_jsxs","className","cl","adminPanelWrapper","children","_jsx","functionalWrapper","deleteWrapper","deleteInputWrapper","type","placeholder","onChange","e","target","value","deleteButton","onClick","remove","ref","database","concat","then","console","log","catch","err","deleteRepetitionsWrapper","uniqueMovies","deleteMovies","moviesRef","onValue","snap","forEach","childSnap","movie","val","movieKey","key","movieKeyExists","hasOwnProperty","movieExists","Object","values","some","m","title","keys","setTimeout","query","limitToLast","map"],"sourceRoot":""}